INFO  2024-05-31 17:20:17[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 27448 (C:\Users\1212s\dev\project\stepup-cinesquare\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\stepup-cinesquare)
INFO  2024-05-31 17:20:17[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-05-31 17:20:17[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-05-31 17:20:17[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-05-31 17:20:18[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 4 ms.
INFO  2024-05-31 17:20:19[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-05-31 17:20:19[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 168 ms. Found 14 JPA repository interfaces.
INFO  2024-05-31 17:20:19[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:20:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-05-31 17:20:19[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-05-31 17:20:19[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-05-31 17:20:19[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-05-31 17:20:19[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-05-31 17:20:20[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-05-31 17:20:20[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-05-31 17:20:20[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-05-31 17:20:20[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-05-31 17:20:20[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-05-31 17:20:20[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2704 ms
INFO  2024-05-31 17:20:20[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@16f80159 with name: jasyptEncryptorAES
INFO  2024-05-31 17:20:20[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-05-31 17:20:21[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-05-31 17:20:21[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4899444c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4899444c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4899444c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6719c92c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6719c92c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72c6dfa0
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72c6dfa0
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@68c4bc98
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@68c4bc98
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a7d3ee8
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a7d3ee8
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a7d3ee8
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4384da22
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4384da22
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4384da22
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@491f87e2
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@491f87e2
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c2f1129
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@72bb80df
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72bb80df
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b0583e4
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3e9025f1
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6a62dd53
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6a62dd53
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6a62dd53
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@447115b8
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@447115b8
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@447115b8
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@63ccb471
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@63ccb471
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@63ccb471
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5cccaa54
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5cccaa54
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5cccaa54
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@20387cdb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@20387cdb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@20387cdb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6ca861b1
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6ca861b1
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6ac12f69
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6ac12f69
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@53e6a66f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@53e6a66f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@53e6a66f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@305bd66c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@1f519c3f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1f519c3f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7c0852db
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1abb56eb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1abb56eb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1abb56eb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@74bd0b66
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@671ec1aa
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@59bec918
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1972d0ca
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1972d0ca
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5880eb9
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5880eb9
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@148a8c33
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3b5371b3
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@34280293
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71902f69
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@313bce7c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1145ef01
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@658d4b20
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@658d4b20
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1516db9f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1516db9f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7a31af6f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7a31af6f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@44326acf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@44326acf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b69ed22
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b69ed22
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68800df3
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1fbd9d5b
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@488ee871
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@488ee871
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c8a1cbf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@240d6f48
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@57a979d7
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@685bce33
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@685bce33
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74285863
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b101e81
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@27ebaff5
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@27ebaff5
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@11f7d76d
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@11f7d76d
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@27aa7e70
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@27aa7e70
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@27aa7e70
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1c759812
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1c759812
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1c759812
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@669b186e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4978f76f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3dd559ce
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3dd559ce
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@d50f36e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@d50f36e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@d50f36e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3336d2c2
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d7b8844
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@2a77bd0c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2a77bd0c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@20b6f0af
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@20b6f0af
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@20b6f0af
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@251396b9
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@251396b9
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@44cb03f7
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@44cb03f7
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@53c359bf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@53c359bf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4467e8e0
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4467e8e0
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@7d78088b
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7d78088b
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@61306868
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2877db50
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@1547a12d
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1547a12d
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@37ce17eb
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2c8224a4
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2536641e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75c2554f
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@32746553
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@f6ed0bd
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@196e53da
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7e611595
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6f2eb9f7
INFO  2024-05-31 17:20:21[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-05-31 17:20:21[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@4b557866
INFO  2024-05-31 17:20:21[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-05-31 17:20:21[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@cab96b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@668d8491)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5691128b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4bf5d6b4)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1bbbd77e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11186194)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fc33c76) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ae6034c)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6fa32149) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3de5f9e8)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b9352ae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7175c0f3)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7aa0efd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15929d59)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6465bb67) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc88d40)
DEBUG 2024-05-31 17:20:21[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c42b122) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6dbb91a6)
DEBUG 2024-05-31 17:20:21[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@a9a744a
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@37ce17eb`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@560d15ef
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@79ddda4c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@397a339a
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@402c4292
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@1270ab30
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@402c4292`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@302f3bbf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5204f77e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@302f3bbf`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@35fd14a3
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5204f77e`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@76ab85ed
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@35fd14a3`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@560d15ef
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@560d15ef`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@79ddda4c
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@79ddda4c`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@397a339a
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@397a339a`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@402c4292
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@1270ab30`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@1270ab30
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@402c4292`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@302f3bbf
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@76ab85ed`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5204f77e
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@302f3bbf`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@35fd14a3
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5204f77e`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@76ab85ed
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@35fd14a3`
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-05-31 17:20:21[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-05-31 17:20:21[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f3cc0fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ef36ffb]
INFO  2024-05-31 17:20:22[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-05-31 17:20:22[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f3cc0fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@29b3e7ab]
INFO  2024-05-31 17:20:22[restartedMain] [p6spy:60] - #1717143622684 | took 3ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-05-31 17:20:22[restartedMain] [p6spy:60] - #1717143622724 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-05-31 17:20:22[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@29b3e7ab] for TypeConfiguration
INFO  2024-05-31 17:20:22[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-05-31 17:20:23[restartedMain] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-05-31 17:20:24[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-05-31 17:20:24[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 6a6bf5bb-3f53-4206-9eec-5a54c663c71d

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-05-31 17:20:25[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f3e3fc5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c082a5d, org.springframework.security.web.context.SecurityContextHolderFilter@71338eb5, org.springframework.security.web.header.HeaderWriterFilter@819d0b7, org.springframework.web.filter.CorsFilter@64a760cd, org.springframework.security.web.authentication.logout.LogoutFilter@33771c51, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@625a478b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a4ce471, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3400914e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b77c4df, org.springframework.security.web.session.SessionManagementFilter@7cb7f996, org.springframework.security.web.access.ExceptionTranslationFilter@71f310f1, org.springframework.security.web.access.intercept.AuthorizationFilter@9a94b94]
INFO  2024-05-31 17:20:25[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-05-31 17:20:25[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-05-31 17:20:26[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-05-31 17:20:26[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-05-31 17:20:26[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-05-31 17:20:26[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-05-31 17:20:26[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-05-31 17:20:26[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-05-31 17:20:26[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-05-31 17:20:26[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3a6cd534
INFO  2024-05-31 17:20:26[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-05-31 17:20:26[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-05-31 17:20:26[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-05-31 17:20:26[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-05-31 17:20:26[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-05-31 17:20:26[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-05-31 17:20:26[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-05-31 17:20:26[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-05-31 17:20:26[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-05-31 17:20:26[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-05-31 17:20:26[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 9.691 seconds (process running for 10.716)
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-05-31 17:24:15[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@29b3e7ab] for TypeConfiguration
DEBUG 2024-05-31 17:24:15[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@634ed3de] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@29b3e7ab]
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-05-31 17:24:15[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-05-31 17:25:49[Test worker] [CinesquareApisApplicationTests:50] - Starting CinesquareApisApplicationTests using Java 17.0.10 with PID 2864 (started by 1212s in C:\Users\1212s\dev\project\stepup-cinesquare)
INFO  2024-05-31 17:25:49[Test worker] [CinesquareApisApplicationTests:660] - The following 1 profile is active: "local"
INFO  2024-05-31 17:25:50[Test worker] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 4 ms.
INFO  2024-05-31 17:25:51[Test worker] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-05-31 17:25:51[Test worker] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 153 ms. Found 14 JPA repository interfaces.
INFO  2024-05-31 17:25:51[Test worker] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource test [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource Inlined Test Properties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-05-31 17:25:51[Test worker] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-05-31 17:25:51[Test worker] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-05-31 17:25:52[Test worker] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-05-31 17:25:52[Test worker] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-05-31 17:25:52[Test worker] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-05-31 17:25:52[Test worker] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@77ecdc2b with name: jasyptEncryptorAES
INFO  2024-05-31 17:25:52[Test worker] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-05-31 17:25:52[Test worker] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-05-31 17:25:52[Test worker] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3639b04
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3639b04
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3639b04
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5cb8580
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5cb8580
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2ca1e49a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2ca1e49a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1aee6d14
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1aee6d14
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54a6ef6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@54a6ef6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@54a6ef6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5c740c5a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5c740c5a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5c740c5a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@405603b6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@405603b6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@3c3cd13a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@56b751b1
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@56b751b1
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2f61de04
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f5a33ed
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5b59c3d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5b59c3d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5b59c3d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@69e36fe3
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@69e36fe3
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@69e36fe3
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@48d31d25
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@48d31d25
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@48d31d25
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@46188a89
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@46188a89
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@46188a89
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6f65a203
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6f65a203
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6f65a203
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1d0b447b
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1d0b447b
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4de158ca
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4de158ca
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@4f2fdf3d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@4f2fdf3d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4f2fdf3d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d180961
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4af7ac25
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4af7ac25
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d978ab9
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3cf06a01
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3cf06a01
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3cf06a01
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71ee2fff
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@68f2363
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@37fca349
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@86377d5
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@86377d5
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@87220f1
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@87220f1
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@77998ea7
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@252d8df6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36638b59
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2f8f40cc
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14d81f2c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5dd3727c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@774013dc
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@774013dc
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@229cb4d8
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@229cb4d8
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76e9eed8
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76e9eed8
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@30ef32eb
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@30ef32eb
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@474619d9
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@474619d9
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@bb5f9d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@391dfe7c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@702cfbde
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@702cfbde
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7d3bcd3
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5dce5c03
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b76b7d8
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c135f63
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c135f63
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63c4d16
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29bd2796
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@174b8d0e
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@174b8d0e
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@112530c3
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@112530c3
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@75959b0c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@75959b0c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@75959b0c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@355493bf
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@355493bf
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@355493bf
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ebc5be6
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4627dfda
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1f3361e9
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1f3361e9
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@eebc0db
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@eebc0db
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@eebc0db
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1214c98b
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6ab50d1c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e0d058a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e0d058a
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3eb0fd88
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3eb0fd88
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3eb0fd88
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@adc3344
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@adc3344
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@484302ee
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@484302ee
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4e647f39
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4e647f39
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@778197c0
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@778197c0
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1c2cdc67
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1c2cdc67
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c28f97e
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@21d8da75
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@549d14fe
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@549d14fe
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@74e4be21
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4d174189
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@628bd77e
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@c30f26d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d74507c
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a984952
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@16944b58
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1dbc607d
DEBUG 2024-05-31 17:25:52[Test worker] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@62b42406
INFO  2024-05-31 17:25:52[Test worker] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-05-31 17:25:53[Test worker] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@493968a9
INFO  2024-05-31 17:25:53[Test worker] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-05-31 17:25:53[Test worker] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eebd983) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a0f43dc)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58a7ca42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f9980e1)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f6e6f50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f7fcec2)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@796cf2b5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a71ebf1)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16890f00) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77e1dacd)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@690677de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c5d376c)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42f2cae8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bbc47c9)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@615e7fe7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@144dc2f7)
DEBUG 2024-05-31 17:25:53[Test worker] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@403cff1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@19677add)
DEBUG 2024-05-31 17:25:53[Test worker] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@31a4db4f
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@74e4be21`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@7341baa3
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@70f5f57d
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@40edc64e
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@8e8ceb3
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@5d67b2b3
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@8e8ceb3`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@6c2f8ecb
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5ca8c904
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@6c2f8ecb`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@2ae4c424
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5ca8c904`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@237aba92
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@2ae4c424`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@7341baa3
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@7341baa3`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@70f5f57d
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@70f5f57d`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@40edc64e
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@40edc64e`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@8e8ceb3
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@5d67b2b3`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@5d67b2b3
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@8e8ceb3`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@6c2f8ecb
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@237aba92`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5ca8c904
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@6c2f8ecb`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@2ae4c424
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5ca8c904`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@237aba92
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@2ae4c424`
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-05-31 17:25:53[Test worker] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-05-31 17:25:53[Test worker] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fe9c048] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54d46c8]
INFO  2024-05-31 17:25:54[Test worker] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-05-31 17:25:54[Test worker] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6fe9c048] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@71ae1cb]
INFO  2024-05-31 17:25:54[Test worker] [p6spy:60] - #1717143954757 | took 4ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-05-31 17:25:54[Test worker] [p6spy:60] - #1717143954802 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-05-31 17:25:54[Test worker] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@71ae1cb] for TypeConfiguration
INFO  2024-05-31 17:25:54[Test worker] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-05-31 17:25:55[Test worker] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-05-31 17:25:57[Test worker] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-05-31 17:25:57[Test worker] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: c660617e-208b-4ee0-824c-b0a8beda07d3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-05-31 17:26:00[Test worker] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c7ceffa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3408de38, org.springframework.security.web.context.SecurityContextHolderFilter@1e1b4e8b, org.springframework.security.web.header.HeaderWriterFilter@4c829699, org.springframework.web.filter.CorsFilter@369ad283, org.springframework.security.web.authentication.logout.LogoutFilter@22448db4, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@3e6a55fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@fd51fb3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ddba5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70fc5fec, org.springframework.security.web.session.SessionManagementFilter@54039b8a, org.springframework.security.web.access.ExceptionTranslationFilter@7c9be48a, org.springframework.security.web.access.intercept.AuthorizationFilter@7b6c6005]
INFO  2024-05-31 17:26:00[Test worker] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-05-31 17:26:00[Test worker] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-05-31 17:26:01[Test worker] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-05-31 17:26:01[Test worker] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-05-31 17:26:01[Test worker] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-05-31 17:26:01[Test worker] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-05-31 17:26:01[Test worker] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-05-31 17:26:01[Test worker] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-05-31 17:26:01[Test worker] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-05-31 17:26:01[Test worker] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4f01d2ea
INFO  2024-05-31 17:26:01[Test worker] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-05-31 17:26:01[Test worker] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-05-31 17:26:01[Test worker] [CinesquareApisApplicationTests:56] - Started CinesquareApisApplicationTests in 11.837 seconds (process running for 13.364)
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-05-31 17:26:02[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@71ae1cb] for TypeConfiguration
DEBUG 2024-05-31 17:26:02[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6c7c2004] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@71ae1cb]
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-05-31 17:26:02[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:15:38[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 14708 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:15:38[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:15:38[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:15:38[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:15:39[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 2 ms.
INFO  2024-06-05 13:15:39[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:15:39[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 56 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:15:39[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:15:39[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:15:39[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:15:39[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:15:39[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:15:39[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:15:39[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:15:39[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:15:39[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:15:39[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:15:39[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:15:39[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1402 ms
INFO  2024-06-05 13:15:40[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@136a5a83 with name: jasyptEncryptorAES
INFO  2024-06-05 13:15:40[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:15:40[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:15:40[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4195351c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4195351c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4195351c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@558fdbca
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@558fdbca
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@421f2896
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@421f2896
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@691def7b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@691def7b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1c80a91
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1c80a91
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1c80a91
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2ab2c0e9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2ab2c0e9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2ab2c0e9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@56ef4932
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@56ef4932
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6a667e8e
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6b000aed
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6b000aed
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e9976a7
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4213149f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bd8905d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bd8905d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1bd8905d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7064b6a9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@7064b6a9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7064b6a9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@556dda4c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@556dda4c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@556dda4c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@f808b92
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@f808b92
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@f808b92
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5085a847
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5085a847
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5085a847
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5018d00
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5018d00
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3e858856
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3e858856
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3552480f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3552480f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3552480f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@48e81972
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4188f4e2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4188f4e2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@535d03bd
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@74e82be9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@74e82be9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@74e82be9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7cc39f8f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@7aea4b11
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4111ff1a
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@741323b2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@741323b2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14cce558
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14cce558
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3cd69613
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@72f147bc
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1f92f4e3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c07346c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@646951f1
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c5d3667
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14e0fce3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14e0fce3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@41110e47
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@41110e47
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6fd9394d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6fd9394d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a42d4df
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a42d4df
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@9563490
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@9563490
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40fc60cb
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66493ac8
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6aa1fef2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6aa1fef2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@52ebb582
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71326d2c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e8296b8
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bb1b5f4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bb1b5f4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@347940a5
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5640100b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@1cbd7b2d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1cbd7b2d
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2a95635b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2a95635b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@541762c4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@541762c4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@541762c4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@281e005
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@281e005
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@281e005
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7592976b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@741cad39
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1bf2e03c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1bf2e03c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@167eba8f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@167eba8f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@167eba8f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@77b64ee4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6652504e
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@6aadbfb8
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6aadbfb8
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@964caa0
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@964caa0
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@964caa0
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c607406
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c607406
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@38c48de4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@38c48de4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3f13a53b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3f13a53b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@108d49b3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@108d49b3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5f02cfe0
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f02cfe0
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@43b5c249
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@61ad8d79
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@faf4d13
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@faf4d13
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@57499fd
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@314bf562
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3d78de66
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@53f78e40
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@72ed4eb2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1ce35568
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6793337c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@8f92440
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@10f96333
INFO  2024-06-05 13:15:40[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:15:40[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@2b55003e
INFO  2024-06-05 13:15:40[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:15:40[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b620074) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78dd5520)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2688305f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d1f25bc)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76d5ffcb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64b3d064)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35e1e65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2748f977)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7eba61f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@470aeb1)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77ae256c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17cdf9af)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ad5bf55) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bd18b98)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3dd25ccb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45aada5f)
DEBUG 2024-06-05 13:15:40[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5292eaa8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65282629)
DEBUG 2024-06-05 13:15:40[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@3e7e6a9c
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@57499fd`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@5f2feef4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@257745e9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@70d8a903
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@1e86170f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@3bbbbaf7
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@1e86170f`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@541fada5
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1e6a7e6b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@541fada5`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@2bf696f2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1e6a7e6b`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@312c75e3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@2bf696f2`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@5f2feef4
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@5f2feef4`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@257745e9
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@257745e9`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@70d8a903
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@70d8a903`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@1e86170f
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@3bbbbaf7`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@3bbbbaf7
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@1e86170f`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@541fada5
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@312c75e3`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1e6a7e6b
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@541fada5`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@2bf696f2
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1e6a7e6b`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@312c75e3
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@2bf696f2`
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:15:40[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:15:40[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56abefe2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a092993]
INFO  2024-06-05 13:15:41[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:15:41[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@56abefe2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@a8c6cdc]
INFO  2024-06-05 13:15:41[restartedMain] [p6spy:60] - #1717560941399 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
WARN  2024-06-05 13:15:41[restartedMain] [ErrorPacket:99] - Error: 1153-08S01: Got a packet bigger than 'max_allowed_packet' bytes
WARN  2024-06-05 13:15:41[restartedMain] [ProxyConnection:177] - HikariPool-1 - Connection org.mariadb.jdbc.Connection@2b55003e marked as broken because of SQLSTATE(08S01), ErrorCode(1153)
java.sql.SQLNonTransientConnectionException: (conn=552) Got a packet bigger than 'max_allowed_packet' bytes
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:300)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.executeQuery(Statement.java:166)
	at org.mariadb.jdbc.DatabaseMetaData.executeQuery(DatabaseMetaData.java:560)
	at org.mariadb.jdbc.DatabaseMetaData.getColumns(DatabaseMetaData.java:931)
	at com.zaxxer.hikari.pool.ProxyDatabaseMetaData.getColumns(ProxyDatabaseMetaData.java:107)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.getColumns(HikariProxyDatabaseMetaData.java)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processColumnsResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:80)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.populateTablesWithColumns(AbstractInformationExtractorImpl.java:649)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.lambda$getTables$3(AbstractInformationExtractorImpl.java:577)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:69)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.stepup.cinesquareapis.CinesquareApisApplication.main(CinesquareApisApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
WARN  2024-06-05 13:15:41[restartedMain] [SqlExceptionHelper:145] - SQL Error: 1153, SQLState: 08S01
ERROR 2024-06-05 13:15:41[restartedMain] [SqlExceptionHelper:150] - (conn=552) Got a packet bigger than 'max_allowed_packet' bytes
TRACE 2024-06-05 13:15:41[restartedMain] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@a8c6cdc] for TypeConfiguration
DEBUG 2024-06-05 13:15:41[restartedMain] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3a0459e7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@a8c6cdc]
ERROR 2024-06-05 13:15:41[restartedMain] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=552) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
ERROR 2024-06-05 13:15:41[restartedMain] [TomcatStarter:60] - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tokenProvider' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\TokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
INFO  2024-06-05 13:15:41[restartedMain] [StandardService:173] - Stopping service [Tomcat]
WARN  2024-06-05 13:15:41[restartedMain] [WebappClassLoaderBase:173] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
WARN  2024-06-05 13:15:41[restartedMain] [WebappClassLoaderBase:173] - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
WARN  2024-06-05 13:15:41[restartedMain] [WebappClassLoaderBase:173] - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection closer] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
WARN  2024-06-05 13:15:41[restartedMain] [AnnotationConfigServletWebServerApplicationContext:632] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
INFO  2024-06-05 13:15:41[restartedMain] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:15:41[restartedMain] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:15:41[restartedMain] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 2024-06-05 13:15:41[restartedMain] [SpringApplication:851] - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.stepup.cinesquareapis.CinesquareApisApplication.main(CinesquareApisApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:145)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tokenProvider' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\TokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tokenProvider' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\TokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=552) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 99 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=552) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 106 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=552) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:51)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.convertSQLException(AbstractInformationExtractorImpl.java:124)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.populateTablesWithColumns(AbstractInformationExtractorImpl.java:671)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.lambda$getTables$3(AbstractInformationExtractorImpl.java:577)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:69)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 110 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: (conn=552) Got a packet bigger than 'max_allowed_packet' bytes
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:300)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.executeQuery(Statement.java:166)
	at org.mariadb.jdbc.DatabaseMetaData.executeQuery(DatabaseMetaData.java:560)
	at org.mariadb.jdbc.DatabaseMetaData.getColumns(DatabaseMetaData.java:931)
	at com.zaxxer.hikari.pool.ProxyDatabaseMetaData.getColumns(ProxyDatabaseMetaData.java:107)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.getColumns(HikariProxyDatabaseMetaData.java)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processColumnsResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:80)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.populateTablesWithColumns(AbstractInformationExtractorImpl.java:649)
	... 129 common frames omitted
INFO  2024-06-05 13:21:15[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 9148 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:21:15[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:21:15[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:21:15[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:21:16[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 2 ms.
INFO  2024-06-05 13:21:16[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:21:16[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 57 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:21:16[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:21:16[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:21:16[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:21:16[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:21:16[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:21:16[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:21:17[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:21:17[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:21:17[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:21:17[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:21:17[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:21:17[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1245 ms
INFO  2024-06-05 13:21:17[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@4d878878 with name: jasyptEncryptorAES
INFO  2024-06-05 13:21:17[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:21:17[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:21:17[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4312dbfe
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4312dbfe
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4312dbfe
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2ce724d3
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2ce724d3
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@27ac2c8d
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@27ac2c8d
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@46703414
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@46703414
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@13e8da0f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@13e8da0f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@13e8da0f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6bca51d
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6bca51d
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6bca51d
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5248ffcc
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5248ffcc
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@31bf2cd5
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6014f1c0
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6014f1c0
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4c31b90a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@599299df
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1183cfbc
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1183cfbc
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1183cfbc
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@56deb6bd
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@56deb6bd
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@56deb6bd
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@17e6ac85
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@17e6ac85
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@17e6ac85
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a7783c7
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5a7783c7
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a7783c7
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5506591a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@5506591a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5506591a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@76ce7659
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@76ce7659
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@54ee7e81
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@54ee7e81
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3261b660
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3261b660
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3261b660
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5548f7bf
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@50312ff1
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@50312ff1
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@778c5900
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@48613327
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@48613327
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@48613327
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5a06c09b
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@311328d
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@16403fb6
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@57f9de52
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@57f9de52
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3b17de2e
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3b17de2e
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3198069b
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@26b23291
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3fa0635b
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3ac33c2f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4b9e4932
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7c8fcc6a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4089d21b
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4089d21b
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6388bc61
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6388bc61
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5a66befb
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5a66befb
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5808c541
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5808c541
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@561fcd51
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@561fcd51
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70520847
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1face1d0
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1101da9
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1101da9
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@294d2d9f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@493d08c1
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3167c257
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@301b7c87
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@301b7c87
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@707a8ece
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51a0fb00
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5e5aee19
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5e5aee19
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@354e5e11
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@354e5e11
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@11e6ba88
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@11e6ba88
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@11e6ba88
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@47483b4f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@47483b4f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@47483b4f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4eeb2f99
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@9924e83
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2d8497c3
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2d8497c3
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b90537f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b90537f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b90537f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3c102673
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@27ed9124
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@2e5e2095
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2e5e2095
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7fc958a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7fc958a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7fc958a
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3a6208b8
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3a6208b8
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@714dca61
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@714dca61
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e480655
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e480655
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4dfb86d3
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4dfb86d3
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@6776601c
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6776601c
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@78f7a051
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@16637bb4
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@28b4aa55
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@28b4aa55
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@6ed947be
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2bdc3d58
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7d2e8823
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5972b50b
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7d32ed2c
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@374e392f
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3e28d075
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@723ef056
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@180f28b0
INFO  2024-06-05 13:21:17[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:21:17[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@40341a73
INFO  2024-06-05 13:21:17[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:21:17[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57c39b2c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d4083a3)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34fdcf9d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2eb07651)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65e19250) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c1558d4)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16cee7ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b61099a)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@527b6fb4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34ce4ed7)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55de3e25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66c0d0dd)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f4f057e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29b146b6)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@dba7ab3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d1c05e1)
DEBUG 2024-06-05 13:21:17[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a6f89c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5948e4c4)
DEBUG 2024-06-05 13:21:17[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@504f6bd2
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6ed947be`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@25eb8cbb
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@3903a9e4
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@ebdefb4
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@45cddb43
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@27e29ec9
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@45cddb43`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@13aa75f1
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@6d264377
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@13aa75f1`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@600fff85
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@6d264377`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@51f0c464
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@600fff85`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@25eb8cbb
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@25eb8cbb`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@3903a9e4
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@3903a9e4`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@ebdefb4
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@ebdefb4`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@45cddb43
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@27e29ec9`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@27e29ec9
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@45cddb43`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@13aa75f1
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@51f0c464`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@6d264377
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@13aa75f1`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@600fff85
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@6d264377`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@51f0c464
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@600fff85`
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:21:17[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:21:17[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@283ae153] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@238a1f94]
INFO  2024-06-05 13:21:18[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:21:18[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@283ae153] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d622b7c]
INFO  2024-06-05 13:21:18[restartedMain] [p6spy:60] - #1717561278425 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
WARN  2024-06-05 13:21:18[restartedMain] [ErrorPacket:99] - Error: 1153-08S01: Got a packet bigger than 'max_allowed_packet' bytes
WARN  2024-06-05 13:21:18[restartedMain] [ProxyConnection:177] - HikariPool-1 - Connection org.mariadb.jdbc.Connection@40341a73 marked as broken because of SQLSTATE(08S01), ErrorCode(1153)
java.sql.SQLNonTransientConnectionException: (conn=563) Got a packet bigger than 'max_allowed_packet' bytes
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:300)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.executeQuery(Statement.java:166)
	at org.mariadb.jdbc.DatabaseMetaData.executeQuery(DatabaseMetaData.java:560)
	at org.mariadb.jdbc.DatabaseMetaData.getColumns(DatabaseMetaData.java:931)
	at com.zaxxer.hikari.pool.ProxyDatabaseMetaData.getColumns(ProxyDatabaseMetaData.java:107)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.getColumns(HikariProxyDatabaseMetaData.java)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processColumnsResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:80)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.populateTablesWithColumns(AbstractInformationExtractorImpl.java:649)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.lambda$getTables$3(AbstractInformationExtractorImpl.java:577)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:69)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.stepup.cinesquareapis.CinesquareApisApplication.main(CinesquareApisApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
WARN  2024-06-05 13:21:18[restartedMain] [SqlExceptionHelper:145] - SQL Error: 1153, SQLState: 08S01
ERROR 2024-06-05 13:21:18[restartedMain] [SqlExceptionHelper:150] - (conn=563) Got a packet bigger than 'max_allowed_packet' bytes
TRACE 2024-06-05 13:21:18[restartedMain] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d622b7c] for TypeConfiguration
DEBUG 2024-06-05 13:21:18[restartedMain] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2e76638d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d622b7c]
ERROR 2024-06-05 13:21:18[restartedMain] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=563) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
ERROR 2024-06-05 13:21:18[restartedMain] [TomcatStarter:60] - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tokenProvider' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\TokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
INFO  2024-06-05 13:21:18[restartedMain] [StandardService:173] - Stopping service [Tomcat]
WARN  2024-06-05 13:21:18[restartedMain] [WebappClassLoaderBase:173] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.10/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
WARN  2024-06-05 13:21:18[restartedMain] [WebappClassLoaderBase:173] - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/java.lang.Thread.sleep(Native Method)
 app//com.zaxxer.hikari.util.UtilityElf.quietlySleep(UtilityElf.java:53)
 app//com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:745)
 app//com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:712)
 java.base@17.0.10/java.util.concurrent.FutureTask.run(FutureTask.java:264)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
WARN  2024-06-05 13:21:18[restartedMain] [WebappClassLoaderBase:173] - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection closer] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.10/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.10/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.10/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.10/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.10/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.10/java.lang.Thread.run(Thread.java:842)
WARN  2024-06-05 13:21:18[restartedMain] [AnnotationConfigServletWebServerApplicationContext:632] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
INFO  2024-06-05 13:21:18[restartedMain] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:21:18[restartedMain] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:21:18[restartedMain] [ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
ERROR 2024-06-05 13:21:18[restartedMain] [SpringApplication:851] - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.stepup.cinesquareapis.CinesquareApisApplication.main(CinesquareApisApplication.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:145)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'tokenProvider' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\TokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tokenProvider' defined in file [C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main\org\stepup\cinesquareapis\auth\jwt\TokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRefreshTokenRepository' defined in org.stepup.cinesquareapis.auth.repository.UserRefreshTokenRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=563) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 99 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=563) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 106 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Error accessing tables metadata [(conn=563) Got a packet bigger than 'max_allowed_packet' bytes] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:51)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.convertSQLException(AbstractInformationExtractorImpl.java:124)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.populateTablesWithColumns(AbstractInformationExtractorImpl.java:671)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.lambda$getTables$3(AbstractInformationExtractorImpl.java:577)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:69)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 110 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: (conn=563) Got a packet bigger than 'max_allowed_packet' bytes
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:300)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.executeQuery(Statement.java:166)
	at org.mariadb.jdbc.DatabaseMetaData.executeQuery(DatabaseMetaData.java:560)
	at org.mariadb.jdbc.DatabaseMetaData.getColumns(DatabaseMetaData.java:931)
	at com.zaxxer.hikari.pool.ProxyDatabaseMetaData.getColumns(ProxyDatabaseMetaData.java:107)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.getColumns(HikariProxyDatabaseMetaData.java)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processColumnsResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:80)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.populateTablesWithColumns(AbstractInformationExtractorImpl.java:649)
	... 129 common frames omitted
INFO  2024-06-05 13:26:28[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 7736 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:26:28[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:26:28[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:26:28[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:26:28[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 2 ms.
INFO  2024-06-05 13:26:28[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:26:28[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 126 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:26:29[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:26:29[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:26:29[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:26:29[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:26:29[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:26:29[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:26:29[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:26:29[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:26:29[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:26:29[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:26:29[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:26:29[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1566 ms
INFO  2024-06-05 13:26:29[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@38255f28 with name: jasyptEncryptorAES
INFO  2024-06-05 13:26:29[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:26:29[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:26:29[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b9e3af8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b9e3af8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a1b8391
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a1b8391
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3512436b
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@251576f7
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5b9c291c
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@628b8fc0
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@628b8fc0
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6ca7efa8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@56c9efe9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@719703dc
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@229e68e9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c8fb73f
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c8fb73f
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35106ac9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35106ac9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7467051b
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@9224dec
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@76844844
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@11feeaee
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@11feeaee
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1e04a9d8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1e04a9d8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1e04a9d8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@552dad9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51c0645f
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@378f4d13
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@378f4d13
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@c7e6853
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@c7e6853
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@c7e6853
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1fe9ef17
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1fe9ef17
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4dd98229
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4dd98229
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@73b954
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@73b954
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7f3075f9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7f3075f9
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2f71bc5f
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2f71bc5f
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2e38ab52
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@331c0ed8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@19a0565c
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@19a0565c
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@44b30b73
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1a3c98b8
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@e7f4f2c
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3336beed
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f82c36b
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@11856f7b
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@65775448
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@63304fdd
DEBUG 2024-06-05 13:26:29[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1ad0514b
INFO  2024-06-05 13:26:29[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:26:30[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@4b0a9aa5
INFO  2024-06-05 13:26:30[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:26:30[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6cce545a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@494be9fa)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d342f0b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@580c018f)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fef250) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50ecc74c)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0cf62d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44b4905a)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@756986ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4389e9a8)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58afd26a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3879af65)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19e1072) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@dd67d40)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bccd212) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ebb4289)
DEBUG 2024-06-05 13:26:30[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f57c4ac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1155807b)
DEBUG 2024-06-05 13:26:30[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@419ce2a7
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@44b30b73`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@84b7d7
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@e0be19d
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@5230539b
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@e0be19d`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@493cc763
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@78ef5c5c
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@493cc763`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@4953d208
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@78ef5c5c`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@590f8f98
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@4953d208`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@84b7d7
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@84b7d7`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@56a08b93`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@e0be19d
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@5230539b`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@5230539b
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@e0be19d`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@493cc763
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@590f8f98`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@78ef5c5c
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@493cc763`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@4953d208
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@78ef5c5c`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@590f8f98
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@4953d208`
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:26:30[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:26:30[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f24c56b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@56554800]
INFO  2024-06-05 13:26:30[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:26:30[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f24c56b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@13049eb1]
INFO  2024-06-05 13:26:30[restartedMain] [p6spy:60] - #1717561590956 | took 9ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
DEBUG 2024-06-05 13:26:30[restartedMain] [SQL:135] - 
    create table tb_movie_summary (
        movie_id integer not null auto_increment,
        comment_count int default 0,
        created datetime(6),
        score_count int default 0,
        score_count_0_5 int default 0,
        score_count_1 int default 0,
        score_count_1_5 int default 0,
        score_count_2 int default 0,
        score_count_2_5 int default 0,
        score_count_3 int default 0,
        score_count_3_5 int default 0,
        score_count_4 int default 0,
        score_count_4_5 int default 0,
        score_count_5 int default 0,
        total_score float(23),
        updated datetime(6),
        primary key (movie_id)
    ) engine=InnoDB
INFO  2024-06-05 13:26:30[restartedMain] [p6spy:60] - #1717561590978 | took 4ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***

    create table tb_movie_summary (
        movie_id integer not null auto_increment,
        comment_count int default 0,
        created datetime(6),
        score_count int default 0,
        score_count_0_5 int default 0,
        score_count_1 int default 0,
        score_count_1_5 int default 0,
        score_count_2 int default 0,
        score_count_2_5 int default 0,
        score_count_3 int default 0,
        score_count_3_5 int default 0,
        score_count_4 int default 0,
        score_count_4_5 int default 0,
        score_count_5 int default 0,
        total_score float(23),
        updated datetime(6),
        primary key (movie_id)
    ) engine=InnoDB

    create table tb_movie_summary (
        movie_id integer not null auto_increment,
        comment_count int default 0,
        created datetime(6),
        score_count int default 0,
        score_count_0_5 int default 0,
        score_count_1 int default 0,
        score_count_1_5 int default 0,
        score_count_2 int default 0,
        score_count_2_5 int default 0,
        score_count_3 int default 0,
        score_count_3_5 int default 0,
        score_count_4 int default 0,
        score_count_4_5 int default 0,
        score_count_5 int default 0,
        total_score float(23),
        updated datetime(6),
        primary key (movie_id)
    ) engine=InnoDB;
INFO  2024-06-05 13:26:31[restartedMain] [p6spy:60] - #1717561591001 | took 19ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:26:31[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@13049eb1] for TypeConfiguration
INFO  2024-06-05 13:26:31[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-06-05 13:26:31[restartedMain] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-06-05 13:26:32[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:26:32[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: d99c15bf-0a93-4e53-bb39-9e83ab1fd630

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:26:32[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c6afcc4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7931b80a, org.springframework.security.web.context.SecurityContextHolderFilter@6dff2a57, org.springframework.security.web.header.HeaderWriterFilter@1c3d1eb7, org.springframework.web.filter.CorsFilter@366a5bc6, org.springframework.security.web.authentication.logout.LogoutFilter@646fa7d4, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@71b34646, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f08a17, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@104bfd5d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e556989, org.springframework.security.web.session.SessionManagementFilter@2bedbd86, org.springframework.security.web.access.ExceptionTranslationFilter@29c2976d, org.springframework.security.web.access.intercept.AuthorizationFilter@7cf329ba]
INFO  2024-06-05 13:26:32[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:26:32[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:26:33[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:26:33[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:26:33[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:26:33[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:26:33[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:26:33[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:26:33[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:26:33[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@16b7c783
INFO  2024-06-05 13:26:33[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:26:33[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:26:33[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:26:33[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:26:33[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:26:33[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:26:33[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:26:33[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:26:33[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:26:33[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:26:33[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 5.556 seconds (process running for 6.028)
INFO  2024-06-05 13:27:12[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  2024-06-05 13:27:12[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  2024-06-05 13:27:12[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  2024-06-05 13:27:12[http-nio-8080-exec-1] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.html from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-1] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.html with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-2] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-2] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui.css with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-3] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-6] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-initializer.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-5] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-standalone-preset.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-4] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-bundle.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-3] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.css with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-5] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-standalone-preset.js with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-4] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-bundle.js with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-6] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-initializer.js with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-7] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs/swagger-config from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-8] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/favicon-32x32.png from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:12[http-nio-8080-exec-8] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/favicon-32x32.png with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-7] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs/swagger-config with status 200
INFO  2024-06-05 13:27:12[http-nio-8080-exec-9] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:27:13[http-nio-8080-exec-9] [AbstractOpenApiResource:401] - Init duration for springdoc-openapi is: 325 ms
INFO  2024-06-05 13:27:13[http-nio-8080-exec-9] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs with status 200
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:28:00[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@13049eb1] for TypeConfiguration
DEBUG 2024-06-05 13:28:00[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2146a10a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@13049eb1]
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:28:00[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:28:03[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 18700 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:28:03[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:28:03[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:28:03[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:28:04[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 3 ms.
INFO  2024-06-05 13:28:04[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:28:04[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 55 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:28:04[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:28:04[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:28:04[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:28:04[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:28:04[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:28:04[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:28:04[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:28:04[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:28:04[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:28:04[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:28:05[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:28:05[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1225 ms
INFO  2024-06-05 13:28:05[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@3c8d7e31 with name: jasyptEncryptorAES
INFO  2024-06-05 13:28:05[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:28:05[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:28:05[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2dcadd1
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2dcadd1
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ac3f165
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ac3f165
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ec748bd
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ec748bd
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@435437bd
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@435437bd
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@32f1ed9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3a64ec39
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3a64ec39
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76802890
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@140b0022
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3835d5a8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4b9e3af8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a1b8391
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3512436b
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@251576f7
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b9c291c
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@628b8fc0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ca7efa8
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56c9efe9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@719703dc
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@229e68e9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c8fb73f
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@35106ac9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7467051b
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@14d90aa0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14d90aa0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@5d3a6670
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52dc07cd
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d2da740
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@17a7bb3e
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19a0565c
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2bf0d8ca
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b577d53
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@31034b4c
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2a0ae986
INFO  2024-06-05 13:28:05[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:28:05[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@959cb9a
INFO  2024-06-05 13:28:05[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:28:05[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14d4dc04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a9b84fb)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@436a9b03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d3736d5)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f31ff8b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@794b18ca)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6eee3663) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5adb34f5)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6aa65582) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b8a8d54)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5448f768) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b70d88)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@f6548b9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@109a942c)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fac2e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6cce545a)
DEBUG 2024-06-05 13:28:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@494be9fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d342f0b)
DEBUG 2024-06-05 13:28:05[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@28dd62a9
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5d3a6670`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@6d38181b
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@2230d509
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6520fb97
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@33fffcf2
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@774e0c18
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@33fffcf2`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1a2ba648
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1a2ba648`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@6d38181b
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@6d38181b`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@2230d509
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@2230d509`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6520fb97
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@6520fb97`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@33fffcf2
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@774e0c18`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@774e0c18
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@33fffcf2`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@56a08b93`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1a2ba648
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1a2ba648`
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:28:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:28:05[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21ae9c94] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@384af16d]
INFO  2024-06-05 13:28:06[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:28:06[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@21ae9c94] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3f2c7545]
INFO  2024-06-05 13:28:06[restartedMain] [p6spy:60] - #1717561686321 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-06-05 13:28:06[restartedMain] [p6spy:60] - #1717561686339 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:28:06[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3f2c7545] for TypeConfiguration
INFO  2024-06-05 13:28:06[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-06-05 13:28:06[restartedMain] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-06-05 13:28:07[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:28:07[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: e5308c5a-db17-4b2e-ac68-d0f14ab5294a

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:28:08[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6f763458, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f9058dc, org.springframework.security.web.context.SecurityContextHolderFilter@3fdf873a, org.springframework.security.web.header.HeaderWriterFilter@606e050b, org.springframework.web.filter.CorsFilter@438a25a9, org.springframework.security.web.authentication.logout.LogoutFilter@104bfd5d, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@16b7a7a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19d15e15, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3807c85a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@380d4a5a, org.springframework.security.web.session.SessionManagementFilter@ea37ff4, org.springframework.security.web.access.ExceptionTranslationFilter@5e1487dd, org.springframework.security.web.access.intercept.AuthorizationFilter@1ddbafad]
INFO  2024-06-05 13:28:08[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:28:08[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:28:08[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:28:08[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:28:08[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:28:08[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:28:08[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:28:08[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:28:08[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:28:08[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2e9cdd70
INFO  2024-06-05 13:28:08[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:28:08[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:28:08[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:28:08[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:28:08[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:28:08[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:28:08[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:28:08[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:28:08[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:28:08[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:28:08[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 4.931 seconds (process running for 5.331)
INFO  2024-06-05 13:28:08[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  2024-06-05 13:28:08[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  2024-06-05 13:28:08[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  2024-06-05 13:28:08[http-nio-8080-exec-1] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.html from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-1] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.html with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-2] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-7] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-standalone-preset.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-3] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.css from 127.0.0.1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-4] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-bundle.js from 127.0.0.1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-8] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-initializer.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-2] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui.css with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-3] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.css with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-7] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-standalone-preset.js with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-4] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-bundle.js with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-8] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-initializer.js with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-5] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs/swagger-config from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-6] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/favicon-32x32.png from 127.0.0.1
INFO  2024-06-05 13:28:08[http-nio-8080-exec-6] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/favicon-32x32.png with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-5] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs/swagger-config with status 200
INFO  2024-06-05 13:28:08[http-nio-8080-exec-9] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:28:09[http-nio-8080-exec-9] [AbstractOpenApiResource:401] - Init duration for springdoc-openapi is: 334 ms
INFO  2024-06-05 13:28:09[http-nio-8080-exec-9] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs with status 200
INFO  2024-06-05 13:29:23[File Watcher] [LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener:211] - Restarting due to 33 class path changes (13 additions, 13 deletions, 7 modifications)
INFO  2024-06-05 13:29:23[Thread-5] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:29:23[Thread-5] [Http11NioProtocol:173] - Stopping ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:29:23[Thread-5] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:29:23[Thread-5] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:29:23[Thread-5] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:29:23[Thread-5] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:29:23[Thread-5] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:29:23[Thread-5] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3f2c7545] for TypeConfiguration
DEBUG 2024-06-05 13:29:23[Thread-5] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1afc5a2c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3f2c7545]
INFO  2024-06-05 13:29:23[Thread-5] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:29:23[Thread-5] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:29:23[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 18700 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:29:23[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:29:24[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 0 ms.
INFO  2024-06-05 13:29:24[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:29:24[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 26 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:29:24[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:29:24[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:29:24[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:29:24[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:29:24[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:29:24[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:29:24[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:29:24[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:29:24[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:29:24[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:29:24[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:29:24[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 345 ms
INFO  2024-06-05 13:29:24[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@5473757c with name: jasyptEncryptorAES
INFO  2024-06-05 13:29:24[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:29:24[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2dcadd1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2dcadd1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ac3f165
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ac3f165
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ec748bd
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ec748bd
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@435437bd
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@435437bd
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@32f1ed9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3a64ec39
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3a64ec39
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76802890
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@140b0022
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3835d5a8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4b9e3af8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a1b8391
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3512436b
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@251576f7
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b9c291c
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@628b8fc0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ca7efa8
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56c9efe9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@719703dc
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@229e68e9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c8fb73f
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@35106ac9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7467051b
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@14d90aa0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14d90aa0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@5d3a6670
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@18116761
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@337cb20f
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@a159a3d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4f7acee1
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5c438200
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a79af4d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2c9b084d
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@350fd6f9
INFO  2024-06-05 13:29:24[restartedMain] [HikariDataSource:110] - HikariPool-2 - Starting...
INFO  2024-06-05 13:29:24[restartedMain] [HikariPool:565] - HikariPool-2 - Added connection org.mariadb.jdbc.Connection@b1b6d34
INFO  2024-06-05 13:29:24[restartedMain] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  2024-06-05 13:29:24[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6876b633) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b09096)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2d93b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a308d3a)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@272a6b61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51e86b32)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@262ffa93) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5888fa31)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c0df322) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3eaebc6a)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@670c224e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78ca05ec)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b1d6d34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@701bdbd1)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@760389ce) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5e4e1787)
DEBUG 2024-06-05 13:29:24[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e6aa5b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@208132f8)
DEBUG 2024-06-05 13:29:24[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@4a2682df
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5d3a6670`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@6d38181b
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@2230d509
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6520fb97
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@33fffcf2
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@774e0c18
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@33fffcf2`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1a2ba648
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1a2ba648`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@31(java.time.Duration,3015)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@31(java.time.Duration,3015)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@31(java.time.Duration,3015)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@6d38181b
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@6d38181b`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@2230d509
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@2230d509`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6520fb97
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@6520fb97`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@33fffcf2
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@774e0c18`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@774e0c18
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@33fffcf2`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@56a08b93`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1a2ba648
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1a2ba648`
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@32(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@32(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@32(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@33(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@33(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@33(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@34(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@34(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:29:24[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@34(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:29:24[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f53a7f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@72ef9c9f]
INFO  2024-06-05 13:29:24[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:29:24[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f53a7f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5504617d]
INFO  2024-06-05 13:29:24[restartedMain] [p6spy:60] - #1717561764443 | took 0ms | statement | connection 4| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-06-05 13:29:24[restartedMain] [p6spy:60] - #1717561764454 | took 0ms | statement | connection 4| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:29:24[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5504617d] for TypeConfiguration
INFO  2024-06-05 13:29:24[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  2024-06-05 13:29:24[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:29:24[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 686abffd-9be1-4f33-b5d3-734f57c158ad

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:29:25[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4083f33e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d1b77b, org.springframework.security.web.context.SecurityContextHolderFilter@651b5a85, org.springframework.security.web.header.HeaderWriterFilter@5750b068, org.springframework.web.filter.CorsFilter@f03e823, org.springframework.security.web.authentication.logout.LogoutFilter@6794300d, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@83526ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7eb9acbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2c3890f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53f80771, org.springframework.security.web.session.SessionManagementFilter@5bf5fbb8, org.springframework.security.web.access.ExceptionTranslationFilter@232713c8, org.springframework.security.web.access.intercept.AuthorizationFilter@3cac117b]
INFO  2024-06-05 13:29:25[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:29:25[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:29:25[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:29:25[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:29:25[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:29:25[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:29:25[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:29:25[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:29:25[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:29:25[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@52dfeb98
INFO  2024-06-05 13:29:25[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:29:25[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:29:25[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:29:25[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:29:25[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:29:25[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:29:25[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:29:25[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:29:25[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:29:25[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:29:25[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 1.301 seconds (process running for 82.145)
INFO  2024-06-05 13:29:25[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  2024-06-05 13:30:59[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  2024-06-05 13:30:59[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  2024-06-05 13:30:59[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  2024-06-05 13:30:59[http-nio-8080-exec-1] [LoggingInterceptor:18] - Incoming request: GET / from 191.243.136.62
WARN  2024-06-05 13:30:59[http-nio-8080-exec-1] [ExceptionHandlerExceptionResolver:247] - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
INFO  2024-06-05 13:30:59[http-nio-8080-exec-1] [LoggingInterceptor:24] - Completed request: GET / with status 404
INFO  2024-06-05 13:33:05[File Watcher] [LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener:211] - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
INFO  2024-06-05 13:33:05[Thread-7] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:33:05[Thread-7] [Http11NioProtocol:173] - Stopping ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:33:05[Thread-7] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:33:05[Thread-7] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:33:05[Thread-7] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:33:05[Thread-7] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:33:05[Thread-7] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:33:05[Thread-7] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5504617d] for TypeConfiguration
DEBUG 2024-06-05 13:33:05[Thread-7] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@58043f47] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5504617d]
INFO  2024-06-05 13:33:05[Thread-7] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  2024-06-05 13:33:05[Thread-7] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  2024-06-05 13:33:05[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 18700 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:33:05[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:33:05[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 0 ms.
INFO  2024-06-05 13:33:05[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:33:05[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 26 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:33:05[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:33:05[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:33:05[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:33:05[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:33:05[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:33:05[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:33:05[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:33:05[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:33:05[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:33:05[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:33:05[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:33:05[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 338 ms
INFO  2024-06-05 13:33:05[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@97ef13a with name: jasyptEncryptorAES
INFO  2024-06-05 13:33:05[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:33:05[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7f9ffcce
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2dcadd1
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2dcadd1
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ac3f165
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ac3f165
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ec748bd
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ec748bd
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ebeb227
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@196b2a04
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@435437bd
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@435437bd
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@32f1ed9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3a64ec39
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3a64ec39
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76802890
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@140b0022
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6f291dac
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6909d4b9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3835d5a8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4b9e3af8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a1b8391
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3512436b
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@251576f7
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b9c291c
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@628b8fc0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6ca7efa8
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56c9efe9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@719703dc
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@229e68e9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c8fb73f
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@35106ac9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7467051b
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@14d90aa0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@14d90aa0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@5d3a6670
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@669f06ec
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7f5b7129
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5608c58f
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@145bf5d2
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@a6d29d3
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2e9bc38e
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e2f5f6f
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7591d81d
INFO  2024-06-05 13:33:05[restartedMain] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  2024-06-05 13:33:05[restartedMain] [HikariPool:565] - HikariPool-3 - Added connection org.mariadb.jdbc.Connection@361ecf83
INFO  2024-06-05 13:33:05[restartedMain] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  2024-06-05 13:33:05[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2be37a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@be8e128)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7dfd2daf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4277c69e)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7275aea7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ed8e060)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2adc2241) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@566342b2)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9bcde4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@709ef4f8)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b1b1e80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7721bd83)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18005b8e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fbe5542)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7cb2b72b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@605d09b)
DEBUG 2024-06-05 13:33:05[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1cc327fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71ba7561)
DEBUG 2024-06-05 13:33:05[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@18589f92
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5d3a6670`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@6d38181b
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@2230d509
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6520fb97
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@33fffcf2
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@774e0c18
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@33fffcf2`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1a2ba648
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1a2ba648`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@53(java.time.Duration,3015)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@53(java.time.Duration,3015)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@53(java.time.Duration,3015)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@6d38181b
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@6d38181b`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@2230d509
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@2230d509`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6520fb97
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@6520fb97`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@33fffcf2
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@774e0c18`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@774e0c18
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@33fffcf2`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3a7d09b0
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@56a08b93`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3a7d09b0`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@1a2ba648
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@56a08b93
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@1a2ba648`
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@54(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@54(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@54(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@55(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@55(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@55(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@56(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@56(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:33:05[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@56(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:33:05[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dc8dbe4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f57eb98]
INFO  2024-06-05 13:33:05[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:33:05[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dc8dbe4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7899f4f4]
INFO  2024-06-05 13:33:05[restartedMain] [p6spy:60] - #1717561985607 | took 0ms | statement | connection 7| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-06-05 13:33:05[restartedMain] [p6spy:60] - #1717561985617 | took 0ms | statement | connection 7| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:33:05[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7899f4f4] for TypeConfiguration
INFO  2024-06-05 13:33:05[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  2024-06-05 13:33:05[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:33:05[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 7b6ba1f2-464e-4c57-bcb4-52dc35a1c118

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:33:06[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5a0def00, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4600dc41, org.springframework.security.web.context.SecurityContextHolderFilter@2cde2fd8, org.springframework.security.web.header.HeaderWriterFilter@29b9447c, org.springframework.web.filter.CorsFilter@5a785242, org.springframework.security.web.authentication.logout.LogoutFilter@5b98f139, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@55881a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@84c81aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b35be7b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57406cb, org.springframework.security.web.session.SessionManagementFilter@3ffa58ef, org.springframework.security.web.access.ExceptionTranslationFilter@6959bdf4, org.springframework.security.web.access.intercept.AuthorizationFilter@7135ccda]
INFO  2024-06-05 13:33:06[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:33:06[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:33:06[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:33:06[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:33:06[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:33:06[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:33:06[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:33:06[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:33:06[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:33:06[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5b20f6e5
INFO  2024-06-05 13:33:06[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:33:06[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:33:06[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:33:06[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:33:06[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:33:06[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:33:06[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:33:06[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:33:06[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:33:06[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:33:06[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 1.329 seconds (process running for 303.356)
INFO  2024-06-05 13:33:06[restartedMain] [ConditionEvaluationDeltaLoggingListener:63] - Condition evaluation unchanged
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:35:16[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7899f4f4] for TypeConfiguration
DEBUG 2024-06-05 13:35:16[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68fc152e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7899f4f4]
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  2024-06-05 13:35:16[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
INFO  2024-06-05 13:35:18[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 22964 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:35:18[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:35:18[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:35:18[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:35:19[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 2 ms.
INFO  2024-06-05 13:35:19[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:35:19[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 51 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:35:19[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:35:19[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:35:19[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:35:19[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:35:19[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:35:19[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:35:19[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:35:19[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:35:19[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:35:19[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:35:19[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:35:19[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1104 ms
INFO  2024-06-05 13:35:19[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@15f136d5 with name: jasyptEncryptorAES
INFO  2024-06-05 13:35:20[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:35:20[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:35:20[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@72313154
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@502532a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@49c459b8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e27e951
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1567ce50
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@26b44d5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@138b89b0
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@4b9e3af8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c15932e
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1b8391
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3512436b
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@f61e6cb
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4fad98ea
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@690c8d85
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4e2292d4
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4ef57265
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d3cc999
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6051011e
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3abf8bf2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5fbcb09a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5447caf5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3cf67892
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7ad084e5
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4052c345
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2aa8b9d8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@251576f7
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5b9c291c
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5b9c291c
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@d0281c1
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@628b8fc0
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ca7efa8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@56c9efe9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4f5c6078
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@719703dc
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@229e68e9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b317df4
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1742854a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5e82ed9d
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f8a1f84
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3fe40d5c
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c8fb73f
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@75285b36
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a811c28
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@35106ac9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7467051b
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43a1014a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6163254a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57134d8d
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b90d5a9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@50f03cc0
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@28c10ae1
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@65735551
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7853e9cb
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2994dc3d
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@9224dec
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@76844844
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@76844844
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@11feeaee
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@11feeaee
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@11feeaee
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e04a9d8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@552dad9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@51c0645f
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@51c0645f
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@378f4d13
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@378f4d13
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@378f4d13
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@c7e6853
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@c7e6853
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1fe9ef17
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1fe9ef17
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4dd98229
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4dd98229
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@73b954
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@73b954
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@7f3075f9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7f3075f9
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2f71bc5f
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2e38ab52
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@17a7bb3e
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17a7bb3e
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@3bd0d48a
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@44b30b73
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1a3c98b8
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e7f4f2c
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3336beed
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6f82c36b
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@11856f7b
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@65775448
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@63304fdd
INFO  2024-06-05 13:35:20[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:35:20[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@17f6d308
INFO  2024-06-05 13:35:20[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:35:20[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fac2e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6cce545a)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@494be9fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d342f0b)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@580c018f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fef250)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50ecc74c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0cf62d)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44b4905a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@756986ee)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4389e9a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58afd26a)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3879af65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@19e1072)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@dd67d40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bccd212)
DEBUG 2024-06-05 13:35:20[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ebb4289) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f57c4ac)
DEBUG 2024-06-05 13:35:20[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@6520fb97
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3bd0d48a`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@616dc359
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@3401da35
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@34e14546
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@5ca50fdc
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@34e14546`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3d93e4e2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5a791705
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3d93e4e2`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@57c78bfd
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5a791705`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5b003518
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@57c78bfd`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@616dc359
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@616dc359`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@52e604b2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@52e604b2`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@3401da35
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@3401da35`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@34e14546
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@5ca50fdc`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@5ca50fdc
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@34e14546`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3d93e4e2
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5b003518`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5a791705
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3d93e4e2`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@57c78bfd
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@5a791705`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@5b003518
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@57c78bfd`
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:35:20[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:35:20[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@133da82] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f24c56b]
INFO  2024-06-05 13:35:21[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:35:21[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@133da82] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@38978d9f]
INFO  2024-06-05 13:35:21[restartedMain] [p6spy:60] - #1717562121165 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-06-05 13:35:21[restartedMain] [p6spy:60] - #1717562121183 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:35:21[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@38978d9f] for TypeConfiguration
INFO  2024-06-05 13:35:21[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-06-05 13:35:21[restartedMain] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-06-05 13:35:22[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:35:22[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 4a1a0e64-198d-440d-aa14-bc652c761981

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:35:22[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@646fa7d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5398e803, org.springframework.security.web.context.SecurityContextHolderFilter@1c3d1eb7, org.springframework.security.web.header.HeaderWriterFilter@1f27da17, org.springframework.web.filter.CorsFilter@7cc79cb9, org.springframework.security.web.authentication.logout.LogoutFilter@7de0d399, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@58459a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@380777a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@bdf602d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39798eb4, org.springframework.security.web.session.SessionManagementFilter@6cbebb26, org.springframework.security.web.access.ExceptionTranslationFilter@ea37ff4, org.springframework.security.web.access.intercept.AuthorizationFilter@459e4bd9]
INFO  2024-06-05 13:35:22[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:35:22[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:35:23[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:35:23[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:35:23[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:35:23[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:35:23[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:35:23[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:35:23[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:35:23[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@38098494
INFO  2024-06-05 13:35:23[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:35:23[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:35:23[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:35:23[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:35:23[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:35:23[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:35:23[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:35:23[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:35:23[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:35:23[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:35:23[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 4.738 seconds (process running for 5.164)
INFO  2024-06-05 13:35:23[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  2024-06-05 13:35:23[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  2024-06-05 13:35:23[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  2024-06-05 13:35:23[http-nio-8080-exec-1] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.html from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-1] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.html with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-2] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-3] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-bundle.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-8] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-initializer.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-5] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-standalone-preset.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-4] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-4] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.css with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-2] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui.css with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-5] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-standalone-preset.js with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-3] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-bundle.js with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-8] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-initializer.js with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-6] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/favicon-32x32.png from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-9] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs/swagger-config from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-6] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/favicon-32x32.png with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-9] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs/swagger-config with status 200
INFO  2024-06-05 13:35:23[http-nio-8080-exec-7] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:35:23[http-nio-8080-exec-7] [AbstractOpenApiResource:401] - Init duration for springdoc-openapi is: 326 ms
INFO  2024-06-05 13:35:23[http-nio-8080-exec-7] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs with status 200
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:38:28[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@38978d9f] for TypeConfiguration
DEBUG 2024-06-05 13:38:28[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a222ffd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@38978d9f]
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:38:28[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:38:31[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 5620 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:38:31[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:38:31[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:38:31[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:38:31[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 2 ms.
INFO  2024-06-05 13:38:31[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:38:31[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 52 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:38:32[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:38:32[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:38:32[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:38:32[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:38:32[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:38:32[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:38:32[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:38:32[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:38:32[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:38:32[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:38:32[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:38:32[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1082 ms
INFO  2024-06-05 13:38:32[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@521cf3c8 with name: jasyptEncryptorAES
INFO  2024-06-05 13:38:32[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:38:32[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:38:32[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@45539899
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@45539899
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@45539899
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7567fa8a
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7567fa8a
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2928cd3b
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2928cd3b
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e10ef4
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e10ef4
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@582fc901
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@582fc901
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@582fc901
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@12d6db24
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@12d6db24
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@12d6db24
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@522612f9
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@522612f9
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@768dec62
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4fa66dee
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4fa66dee
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@65dc4bd
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@648eaf55
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7df9b15a
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7df9b15a
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7df9b15a
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@14c7a16
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@14c7a16
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@14c7a16
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@69dc3eae
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@69dc3eae
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@69dc3eae
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7839c0c7
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7839c0c7
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7839c0c7
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@487addfb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@487addfb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@487addfb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2a048228
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2a048228
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@22a5f088
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@22a5f088
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@142c33e3
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@142c33e3
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@142c33e3
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a27b198
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4bc6736
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4bc6736
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@990e699
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7cd66f63
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7cd66f63
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7cd66f63
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4b4aba10
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2ca8e198
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@22026eba
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6d60b0ee
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6d60b0ee
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@73e40d68
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@73e40d68
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@182b96ad
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@296d4cac
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@41627eaf
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@123eb4a6
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5664c6b2
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@15afe8fe
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@476a6be2
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@476a6be2
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@20966c2d
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@20966c2d
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@50b77fdb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@50b77fdb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ab5952b
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ab5952b
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e14dce4
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e14dce4
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3df03a0f
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56d2c3cd
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@405808f1
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@405808f1
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@48a30fe2
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74bf64bb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@34330d4a
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@34ac94bd
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@34ac94bd
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@642041d5
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b357b56
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47c07227
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47c07227
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@17191f1e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@17191f1e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71d1dac1
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71d1dac1
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71d1dac1
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@31fee066
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@31fee066
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@31fee066
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@756bfd34
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a55ed68
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@552d3d31
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@552d3d31
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@13161a22
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@13161a22
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@13161a22
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@393ed729
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3c8543cb
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d25df
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d25df
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2399f8f8
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2399f8f8
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2399f8f8
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6cd1f43d
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6cd1f43d
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7adc7977
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7adc7977
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@13e6e82e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@13e6e82e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fd49c92
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fd49c92
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1c47ef49
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1c47ef49
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5493a77
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@214a0568
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@32cb49c2
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@32cb49c2
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@78778b98
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@65405c59
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b578031
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43343808
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@75b50bd
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@609e669b
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@278f34b1
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4599bc30
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@189ac286
INFO  2024-06-05 13:38:32[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:38:32[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@187bb31a
INFO  2024-06-05 13:38:32[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:38:32[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b60f26c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b833a1b)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dea9a9f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@746ba39a)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7814dce9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a456212)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434231a7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a9c3d26)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b14708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65b5e67e)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37282c66) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c5652a8)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@261db2d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@482d5b09)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e100576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@305dd30e)
DEBUG 2024-06-05 13:38:32[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c69ce9b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ebe2f0c)
DEBUG 2024-06-05 13:38:32[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@76aee289
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@78778b98`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@7c56d83e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@d10c68e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6245bf3d
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@3c47f1e5
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@4b6c3a75
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@3c47f1e5`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@39557d58
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@48301ccc
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@39557d58`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@4bf00f06
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@48301ccc`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3d484225
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@4bf00f06`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@7c56d83e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@7c56d83e`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@d10c68e
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@d10c68e`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6245bf3d
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@6245bf3d`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@3c47f1e5
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@4b6c3a75`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@4b6c3a75
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@3c47f1e5`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@39557d58
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3d484225`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@48301ccc
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@39557d58`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@4bf00f06
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@48301ccc`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3d484225
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@4bf00f06`
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:38:32[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:38:32[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34126b07] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73a5c742]
INFO  2024-06-05 13:38:33[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:38:33[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34126b07] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2d721db7]
INFO  2024-06-05 13:38:33[restartedMain] [p6spy:60] - #1717562313551 | took 2ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-06-05 13:38:33[restartedMain] [p6spy:60] - #1717562313570 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:38:33[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2d721db7] for TypeConfiguration
INFO  2024-06-05 13:38:33[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-06-05 13:38:33[restartedMain] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-06-05 13:38:34[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:38:34[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 09a848eb-4214-4c6c-9282-8f05b097050b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:38:35[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@336b36cb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@645600de, org.springframework.security.web.context.SecurityContextHolderFilter@25668436, org.springframework.security.web.header.HeaderWriterFilter@7ecc4ccf, org.springframework.web.filter.CorsFilter@15de8db2, org.springframework.security.web.authentication.logout.LogoutFilter@2c4f7f2c, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@7480de90, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65092c0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3166a64, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48c6f1e6, org.springframework.security.web.session.SessionManagementFilter@28dd7ce5, org.springframework.security.web.access.ExceptionTranslationFilter@4e4d4d2, org.springframework.security.web.access.intercept.AuthorizationFilter@d3b4a22]
INFO  2024-06-05 13:38:35[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:38:35[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:38:35[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:38:35[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:38:35[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:38:35[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:38:35[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:38:35[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:38:35[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:38:35[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@10d2ce64
INFO  2024-06-05 13:38:35[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:38:35[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:38:35[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:38:35[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:38:35[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:38:35[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:38:35[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:38:35[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:38:35[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:38:35[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:38:35[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 4.707 seconds (process running for 5.203)
INFO  2024-06-05 13:38:36[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  2024-06-05 13:38:36[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  2024-06-05 13:38:36[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
INFO  2024-06-05 13:38:36[http-nio-8080-exec-1] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.html from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-1] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.html with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-3] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-5] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-bundle.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-2] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-6] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-initializer.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-4] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-standalone-preset.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-3] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui.css with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-2] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.css with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-4] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-standalone-preset.js with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-5] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-bundle.js with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-6] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-initializer.js with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-7] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs/swagger-config from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-8] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/favicon-32x32.png from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-8] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/favicon-32x32.png with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-7] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs/swagger-config with status 200
INFO  2024-06-05 13:38:36[http-nio-8080-exec-9] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:38:36[http-nio-8080-exec-9] [AbstractOpenApiResource:401] - Init duration for springdoc-openapi is: 266 ms
INFO  2024-06-05 13:38:36[http-nio-8080-exec-9] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs with status 200
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:39:06[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2d721db7] for TypeConfiguration
DEBUG 2024-06-05 13:39:06[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@44dad4a8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2d721db7]
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:39:06[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  2024-06-05 13:39:09[restartedMain] [CinesquareApisApplication:50] - Starting CinesquareApisApplication using Java 17.0.10 with PID 3932 (C:\Users\1212s\dev\project\cinesquare-apis\build\classes\java\main started by 1212s in C:\Users\1212s\dev\project\cinesquare-apis)
INFO  2024-06-05 13:39:09[restartedMain] [CinesquareApisApplication:660] - The following 1 profile is active: "local"
INFO  2024-06-05 13:39:09[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
INFO  2024-06-05 13:39:09[restartedMain] [DevToolsPropertyDefaultsPostProcessor:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
INFO  2024-06-05 13:39:09[restartedMain] [BatchRegistrar:70] - Finished Spring Batch infrastructure beans configuration in 2 ms.
INFO  2024-06-05 13:39:09[restartedMain] [RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  2024-06-05 13:39:09[restartedMain] [RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 52 ms. Found 14 JPA repository interfaces.
INFO  2024-06-05 13:39:09[restartedMain] [EnableEncryptablePropertiesBeanFactoryPostProcessor:44] - Post-processing PropertySource instances
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletContextInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
INFO  2024-06-05 13:39:09[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource class path resource [jwt.yml] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
WARN  2024-06-05 13:39:09[restartedMain] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'jobRegistry' of type [org.springframework.batch.core.configuration.support.MapJobRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
INFO  2024-06-05 13:39:09[restartedMain] [DefaultLazyPropertyFilter:45] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
INFO  2024-06-05 13:39:09[restartedMain] [DefaultLazyPropertyResolver:46] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
INFO  2024-06-05 13:39:09[restartedMain] [DefaultLazyPropertyDetector:44] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
INFO  2024-06-05 13:39:10[restartedMain] [TomcatWebServer:109] - Tomcat initialized with port 8080 (http)
INFO  2024-06-05 13:39:10[restartedMain] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:39:10[restartedMain] [StandardService:173] - Starting service [Tomcat]
INFO  2024-06-05 13:39:10[restartedMain] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.19]
INFO  2024-06-05 13:39:10[restartedMain] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  2024-06-05 13:39:10[restartedMain] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1091 ms
INFO  2024-06-05 13:39:10[restartedMain] [DefaultLazyEncryptor:41] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@521cf3c8 with name: jasyptEncryptorAES
INFO  2024-06-05 13:39:10[restartedMain] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  2024-06-05 13:39:10[restartedMain] [Version:44] - HHH000412: Hibernate ORM core version 6.4.4.Final
INFO  2024-06-05 13:39:10[restartedMain] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@45539899
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@45539899
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@45539899
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7567fa8a
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7567fa8a
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2928cd3b
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2928cd3b
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e10ef4
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e10ef4
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@582fc901
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@582fc901
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@582fc901
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@12d6db24
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@12d6db24
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@12d6db24
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@522612f9
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@522612f9
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@768dec62
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4fa66dee
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4fa66dee
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@65dc4bd
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@648eaf55
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7df9b15a
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7df9b15a
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7df9b15a
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@14c7a16
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@14c7a16
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@14c7a16
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@69dc3eae
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@69dc3eae
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@69dc3eae
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7839c0c7
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@7839c0c7
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7839c0c7
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@487addfb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@487addfb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@487addfb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2a048228
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2a048228
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@22a5f088
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@22a5f088
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@142c33e3
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@142c33e3
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@142c33e3
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@a27b198
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4bc6736
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4bc6736
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@990e699
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7cd66f63
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7cd66f63
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7cd66f63
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4b4aba10
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@2ca8e198
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@22026eba
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6d60b0ee
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6d60b0ee
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@73e40d68
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@73e40d68
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@182b96ad
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@296d4cac
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@41627eaf
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@123eb4a6
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5664c6b2
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@15afe8fe
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@476a6be2
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@476a6be2
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@20966c2d
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@20966c2d
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@50b77fdb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@50b77fdb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ab5952b
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ab5952b
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e14dce4
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e14dce4
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3df03a0f
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@56d2c3cd
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@405808f1
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@405808f1
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@48a30fe2
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74bf64bb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@34330d4a
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@34ac94bd
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@34ac94bd
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@642041d5
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b357b56
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@47c07227
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47c07227
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@17191f1e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@17191f1e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71d1dac1
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71d1dac1
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71d1dac1
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@31fee066
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@31fee066
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@31fee066
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@756bfd34
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2a55ed68
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@552d3d31
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@552d3d31
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@13161a22
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@13161a22
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@13161a22
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@393ed729
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3c8543cb
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d25df
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d25df
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2399f8f8
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2399f8f8
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2399f8f8
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6cd1f43d
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6cd1f43d
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7adc7977
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7adc7977
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@13e6e82e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@13e6e82e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fd49c92
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fd49c92
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@1c47ef49
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1c47ef49
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5493a77
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@214a0568
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@32cb49c2
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@32cb49c2
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@78778b98
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@65405c59
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b578031
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43343808
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@75b50bd
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@609e669b
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@278f34b1
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4599bc30
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@189ac286
INFO  2024-06-05 13:39:10[restartedMain] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  2024-06-05 13:39:10[restartedMain] [HikariPool:565] - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@187bb31a
INFO  2024-06-05 13:39:10[restartedMain] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  2024-06-05 13:39:10[restartedMain] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b60f26c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b833a1b)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dea9a9f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@746ba39a)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7814dce9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a456212)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434231a7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a9c3d26)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34b14708) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65b5e67e)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37282c66) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c5652a8)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@261db2d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@482d5b09)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e100576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@305dd30e)
DEBUG 2024-06-05 13:39:10[restartedMain] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c69ce9b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ebe2f0c)
DEBUG 2024-06-05 13:39:10[restartedMain] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@76aee289
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@78778b98`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@7c56d83e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@d10c68e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6245bf3d
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@3c47f1e5
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@4b6c3a75
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@3c47f1e5`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@39557d58
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@48301ccc
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@39557d58`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@4bf00f06
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@48301ccc`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3d484225
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@4bf00f06`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,3015)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration com.fasterxml.jackson.databind.JsonNode -> org.hibernate.type.CustomType@7c56d83e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [com.fasterxml.jackson.databind.JsonNode] overrode previous entry : `org.hibernate.type.CustomType@7c56d83e`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.lang.Character -> org.hibernate.type.CustomType@d10c68e
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.lang.Character] overrode previous entry : `org.hibernate.type.CustomType@d10c68e`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.Month -> org.hibernate.type.CustomType@6245bf3d
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.Month] overrode previous entry : `org.hibernate.type.CustomType@6245bf3d`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@3c47f1e5
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@4b6c3a75`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.MonthDay -> org.hibernate.type.CustomType@4b6c3a75
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.MonthDay] overrode previous entry : `org.hibernate.type.CustomType@3c47f1e5`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@39557d58
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@3d484225`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@48301ccc
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@39557d58`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@4bf00f06
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@48301ccc`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.YearMonth -> org.hibernate.type.CustomType@3d484225
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:375] - Type registration key [java.time.YearMonth] overrode previous entry : `org.hibernate.type.CustomType@4bf00f06`
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:39:10[restartedMain] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
DEBUG 2024-06-05 13:39:10[restartedMain] [TypeConfiguration$Scope:194] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34126b07] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73a5c742]
INFO  2024-06-05 13:39:11[restartedMain] [JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 2024-06-05 13:39:11[restartedMain] [TypeConfiguration$Scope:206] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34126b07] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2d721db7]
INFO  2024-06-05 13:39:11[restartedMain] [p6spy:60] - #1717562351349 | took 4ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE';
INFO  2024-06-05 13:39:11[restartedMain] [p6spy:60] - #1717562351368 | took 0ms | statement | connection 1| url jdbc:mariadb://localhost/cinesquare?user=root&password=***
select * from `cinesquare`.`tb_user` where 1=0
select * from `cinesquare`.`tb_user` where 1=0;
TRACE 2024-06-05 13:39:11[restartedMain] [TypeConfiguration$Scope:270] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2d721db7] for TypeConfiguration
INFO  2024-06-05 13:39:11[restartedMain] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  2024-06-05 13:39:11[restartedMain] [QueryEnhancerFactory:49] - Hibernate is in classpath; If applicable, HQL parser will be used.
WARN  2024-06-05 13:39:12[restartedMain] [JpaBaseConfiguration$JpaWebConfiguration:232] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
WARN  2024-06-05 13:39:12[restartedMain] [UserDetailsServiceAutoConfiguration:86] - 

Using generated security password: 4b442e58-2db4-4aa9-9d96-e33f2a3313ef

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  2024-06-05 13:39:12[restartedMain] [DefaultSecurityFilterChain:54] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@336b36cb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@645600de, org.springframework.security.web.context.SecurityContextHolderFilter@25668436, org.springframework.security.web.header.HeaderWriterFilter@7ecc4ccf, org.springframework.web.filter.CorsFilter@15de8db2, org.springframework.security.web.authentication.logout.LogoutFilter@2c4f7f2c, org.stepup.cinesquareapis.auth.jwt.JwtAuthenticationFilter@7480de90, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65092c0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3166a64, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48c6f1e6, org.springframework.security.web.session.SessionManagementFilter@28dd7ce5, org.springframework.security.web.access.ExceptionTranslationFilter@4e4d4d2, org.springframework.security.web.access.intercept.AuthorizationFilter@d3b4a22]
INFO  2024-06-05 13:39:13[restartedMain] [JobRepositoryFactoryBean:274] - No database type set, using meta data indicating: MARIADB
INFO  2024-06-05 13:39:13[restartedMain] [SimpleJobLauncher:232] - No TaskExecutor has been set, defaulting to synchronous executor.
INFO  2024-06-05 13:39:13[restartedMain] [StdSchedulerFactory:1220] - Using default implementation for ThreadExecutor
INFO  2024-06-05 13:39:13[restartedMain] [SchedulerSignalerImpl:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
INFO  2024-06-05 13:39:13[restartedMain] [QuartzScheduler:229] - Quartz Scheduler v.2.3.2 created.
INFO  2024-06-05 13:39:13[restartedMain] [RAMJobStore:155] - RAMJobStore initialized.
INFO  2024-06-05 13:39:13[restartedMain] [QuartzScheduler:294] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

INFO  2024-06-05 13:39:13[restartedMain] [StdSchedulerFactory:1374] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
INFO  2024-06-05 13:39:13[restartedMain] [StdSchedulerFactory:1378] - Quartz scheduler version: 2.3.2
INFO  2024-06-05 13:39:13[restartedMain] [QuartzScheduler:2293] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@10d2ce64
INFO  2024-06-05 13:39:13[restartedMain] [OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
INFO  2024-06-05 13:39:13[restartedMain] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  2024-06-05 13:39:13[restartedMain] [TomcatWebServer:241] - Tomcat started on port 8080 (http) with context path ''
INFO  2024-06-05 13:39:13[restartedMain] [RefreshScopeRefreshedEventListener:70] - Refreshing cached encryptable property sources on ServletWebServerInitializedEvent
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemProperties refreshed
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source systemEnvironment refreshed
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source random refreshed
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #1) refreshed
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source Config resource 'class path resource [application.yml]' via location 'optional:classpath:/' (document #0) refreshed
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source devtools refreshed
INFO  2024-06-05 13:39:13[restartedMain] [CachingDelegateEncryptablePropertySource:92] - Property Source class path resource [jwt.yml] refreshed
INFO  2024-06-05 13:39:13[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource configurationProperties [class org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource
INFO  2024-06-05 13:39:13[restartedMain] [EncryptablePropertySourceConverter:105] - Skipping PropertySource servletConfigInitParams [class org.springframework.core.env.PropertySource$StubPropertySource
INFO  2024-06-05 13:39:13[restartedMain] [EncryptablePropertySourceConverter:110] - Converting PropertySource servletContextInitParams [org.springframework.web.context.support.ServletContextPropertySource] to EncryptableEnumerablePropertySourceWrapper
INFO  2024-06-05 13:39:13[restartedMain] [SchedulerFactoryBean:729] - Starting Quartz Scheduler now
INFO  2024-06-05 13:39:13[restartedMain] [QuartzScheduler:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
INFO  2024-06-05 13:39:13[restartedMain] [CinesquareApisApplication:56] - Started CinesquareApisApplication in 4.726 seconds (process running for 5.13)
INFO  2024-06-05 13:39:13[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  2024-06-05 13:39:13[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  2024-06-05 13:39:13[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 0 ms
INFO  2024-06-05 13:39:13[http-nio-8080-exec-1] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.html from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-1] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.html with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-2] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-4] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/index.css from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-3] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-standalone-preset.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-6] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-initializer.js from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-5] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/swagger-ui-bundle.js from 127.0.0.1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-2] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui.css with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-4] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/index.css with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-3] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-standalone-preset.js with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-5] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-ui-bundle.js with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-6] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/swagger-initializer.js with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-7] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs/swagger-config from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-8] [LoggingInterceptor:18] - Incoming request: GET /swagger-ui/favicon-32x32.png from 127.0.0.1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-8] [LoggingInterceptor:24] - Completed request: GET /swagger-ui/favicon-32x32.png with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-7] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs/swagger-config with status 200
INFO  2024-06-05 13:39:13[http-nio-8080-exec-9] [LoggingInterceptor:18] - Incoming request: GET /v3/api-docs from 0:0:0:0:0:0:0:1
INFO  2024-06-05 13:39:13[http-nio-8080-exec-9] [AbstractOpenApiResource:401] - Init duration for springdoc-openapi is: 270 ms
INFO  2024-06-05 13:39:13[http-nio-8080-exec-9] [LoggingInterceptor:24] - Completed request: GET /v3/api-docs with status 200
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [SchedulerFactoryBean:844] - Shutting down Quartz Scheduler
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [QuartzScheduler:666] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [QuartzScheduler:585] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [QuartzScheduler:740] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 2024-06-05 13:39:20[SpringApplicationShutdownHook] [TypeConfiguration$Scope:276] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2d721db7] for TypeConfiguration
DEBUG 2024-06-05 13:39:20[SpringApplicationShutdownHook] [TypeConfiguration$Scope:555] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e5413f8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2d721db7]
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  2024-06-05 13:39:20[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
